import java.util.Arrays;
public class name{
 Static final int MAX=26;
 Static String findSubString(String a)
 {
   int  n=a.length();
   int dist=0;
 boolean[] visited=new boolean[Max];
 Arrays.fill(visited,false);
   for(int i=0;i<n;i++)
   {
     if(visited[a.charAt(i)]==false)
     {
       visited[a.charAt(i)]=true;
       dist++;
     }
   }
 int start=0,startindex=-1;
 int min_len=Integer.MAX;
 int vount=0;
 int[] curr_count=new int[MAX];
   for(int j=0;j<n;j++)
   {
 curr_count[a.charAt(start)]++;
  if(curr_count[str.charAt(j)==1)
  count++;
 if(count==dist)
 {
 while(curr_count[str.charAt(start)]>1)
 { 
 if(curr_count[str.charAt(start)]>1)
 curr_count[str.charAt(start)]--;
 start++;
 }
 int len=j-start+1;
 if(min_len>len;
 startindex=start;
 }
 }
 }
 return str.substring(start_index,start_index+min_len);
 }
 public static void main(String args[])
 {
 String str="abcda";
 System.out.println(findSubString(str));
 }
 }
